@startuml Backend_Auth_Middleware
title Langflow Backend - Authentication Middleware Sequence

participant "Client" as Client
participant "FastAPI App" as FastAPI
participant "Auth Middleware" as AuthMiddleware
participant "Auth Service" as AuthService
participant "Settings Service" as SettingsService
database "Database" as DB
participant "Route Handler" as RouteHandler

Client -> FastAPI: HTTP Request with JWT
FastAPI -> AuthMiddleware: process_request()
activate AuthMiddleware

AuthMiddleware -> AuthMiddleware: extract_token_from_header()

alt No token found
    AuthMiddleware -> Client: 401 Unauthorized
else Token found
    AuthMiddleware -> AuthService: validate_token(token)
    AuthService -> SettingsService: get_jwt_settings()
    SettingsService --> AuthService: jwt_settings
    
    AuthService -> AuthService: decode_jwt(token, settings)
    
    alt Invalid token
        AuthService --> AuthMiddleware: Validation error
        AuthMiddleware -> Client: 401 Unauthorized
    else Valid token
        AuthService -> DB: get_user(user_id)
        DB --> AuthService: user_data
        
        alt User not found
            AuthService --> AuthMiddleware: User not found
            AuthMiddleware -> Client: 401 Unauthorized
        else User found
            AuthService --> AuthMiddleware: Valid user
            
            AuthMiddleware -> AuthMiddleware: set_user_context()
            AuthMiddleware -> RouteHandler: forward_request()
            
            RouteHandler -> RouteHandler: process_request()
            RouteHandler --> AuthMiddleware: response
            
            AuthMiddleware --> FastAPI: Return response
            FastAPI --> Client: HTTP Response
        end
    end
end

deactivate AuthMiddleware

@enduml