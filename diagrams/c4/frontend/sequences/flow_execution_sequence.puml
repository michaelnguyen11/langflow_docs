@startuml Frontend_Flow_Execution
title Langflow Frontend - Flow Execution Sequence

actor User
participant "Playground" as Playground
participant "Input Form" as InputForm
participant "Execution Panel" as ExecPanel
participant "Chat Interface" as ChatUI
participant "Flow Store" as FlowStore
participant "API Client" as APIClient
participant "Backend API" as BackendAPI
participant "Flow Engine" as FlowEngine

User -> Playground: Open flow in playground
Playground -> FlowStore: getFlow(flowId)
FlowStore --> Playground: Flow data
Playground -> InputForm: Generate input fields
Playground -> ExecPanel: Initialize execution panel
Playground -> ChatUI: Initialize chat interface

User -> InputForm: Fill input values
InputForm -> FlowStore: updateInputValues(values)

User -> ExecPanel: Click "Execute" button
ExecPanel -> FlowStore: getFlowWithInputs()
FlowStore --> ExecPanel: Flow with input values
ExecPanel -> APIClient: executeFlow(flowId, inputs)
APIClient -> BackendAPI: POST /api/v1/flows/{flowId}/execute
note right: Alternative: /chat/{flowId} for chat flows

BackendAPI -> FlowEngine: Execute flow with inputs
FlowEngine -> FlowEngine: Process flow graph
FlowEngine -> FlowEngine: Execute nodes in topological order
FlowEngine --> BackendAPI: Execution results

alt Regular Execution
    BackendAPI --> APIClient: Return complete results
    APIClient --> ExecPanel: Results
    ExecPanel -> ExecPanel: Process results
    ExecPanel -> ChatUI: Display results
else Streaming Response
    BackendAPI --> APIClient: Stream response chunks
    loop For each chunk
        APIClient --> ExecPanel: Result chunk
        ExecPanel -> ChatUI: Update with new chunk
    end
end

ExecPanel -> ExecPanel: Update execution state
ChatUI -> User: Display final results

User -> ChatUI: Continue conversation (for chat flows)
ChatUI -> APIClient: sendMessage(flowId, message, chatHistory)
APIClient -> BackendAPI: POST /api/v1/flows/chat/{flowId}
BackendAPI -> FlowEngine: Execute with chat history
FlowEngine --> BackendAPI: Response
BackendAPI --> APIClient: Return response
APIClient --> ChatUI: Update chat interface
ChatUI -> User: Display response

@enduml