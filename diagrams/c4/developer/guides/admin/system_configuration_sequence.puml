@startuml Admin_System_Configuration
title Administrator Perspective - System Configuration Sequence

actor "Administrator" as Admin
boundary "Admin UI" as AdminUI
control "Settings Management" as SettingsMgmt
control "Backend API" as API
database "Database" as DB
control "Settings Service" as SettingsService
entity "System Components" as Components

Admin -> AdminUI: Login with admin credentials
AdminUI -> API: Authenticate admin
API -> DB: Verify admin credentials
DB --> API: Admin authenticated
API --> AdminUI: Authentication successful
AdminUI -> Admin: Display admin dashboard

Admin -> AdminUI: Navigate to system settings
AdminUI -> API: GET /api/v1/settings
API -> SettingsService: get_settings()
SettingsService -> DB: Query settings
DB --> SettingsService: Current settings
SettingsService --> API: Settings data
API --> AdminUI: Settings data
AdminUI -> Admin: Display settings interface

alt Configure general settings
    Admin -> AdminUI: Modify general settings
    AdminUI -> API: PUT /api/v1/settings/general
    API -> SettingsService: update_general_settings()
    SettingsService -> DB: Update settings
    DB --> SettingsService: Settings updated
    SettingsService -> Components: Notify settings change
    Components --> SettingsService: Acknowledge
    SettingsService --> API: Update successful
    API --> AdminUI: Update confirmed
    AdminUI -> Admin: Display success message
end

alt Configure security settings
    Admin -> AdminUI: Modify security settings
    AdminUI -> API: PUT /api/v1/settings/security
    API -> SettingsService: update_security_settings()
    SettingsService -> DB: Update security settings
    DB --> SettingsService: Settings updated
    SettingsService -> Components: Apply security changes
    Components --> SettingsService: Security changes applied
    SettingsService --> API: Update successful
    API --> AdminUI: Update confirmed
    AdminUI -> Admin: Display success message
end

alt Configure component settings
    Admin -> AdminUI: Modify component settings
    AdminUI -> API: PUT /api/v1/settings/components
    API -> SettingsService: update_component_settings()
    SettingsService -> DB: Update component settings
    DB --> SettingsService: Settings updated
    SettingsService -> Components: Reload components
    Components -> Components: Reinitialize with new settings
    Components --> SettingsService: Components reloaded
    SettingsService --> API: Update successful
    API --> AdminUI: Update confirmed
    AdminUI -> Admin: Display success message
end

alt Configure API keys
    Admin -> AdminUI: Manage API keys
    AdminUI -> API: GET /api/v1/settings/apikeys
    API -> SettingsService: get_api_keys()
    SettingsService -> DB: Query API keys
    DB --> SettingsService: API key data
    SettingsService --> API: API key data
    API --> AdminUI: API key data
    AdminUI -> Admin: Display API key management interface
    
    alt Add new API key
        Admin -> AdminUI: Add new API key
        AdminUI -> API: POST /api/v1/settings/apikeys
        API -> SettingsService: add_api_key()
        SettingsService -> DB: Store new API key
        DB --> SettingsService: API key added
        SettingsService --> API: Addition successful
        API --> AdminUI: New key details
        AdminUI -> Admin: Display new key
    end
    
    alt Delete API key
        Admin -> AdminUI: Select key to delete
        AdminUI -> API: DELETE /api/v1/settings/apikeys/{id}
        API -> SettingsService: delete_api_key()
        SettingsService -> DB: Remove API key
        DB --> SettingsService: API key deleted
        SettingsService --> API: Deletion successful
        API --> AdminUI: Confirmation
        AdminUI -> Admin: Display success message
    end
end

alt Configure backup settings
    Admin -> AdminUI: Configure backup settings
    AdminUI -> API: PUT /api/v1/settings/backup
    API -> SettingsService: update_backup_settings()
    SettingsService -> DB: Update backup settings
    DB --> SettingsService: Settings updated
    SettingsService --> API: Update successful
    API --> AdminUI: Update confirmed
    AdminUI -> Admin: Display success message
end

alt Restart services
    Admin -> AdminUI: Click "Restart Services"
    AdminUI -> Admin: Confirm restart
    Admin -> AdminUI: Confirm
    AdminUI -> API: POST /api/v1/admin/restart
    API -> Components: Signal restart
    Components -> Components: Graceful shutdown
    Components -> Components: Restart with new settings
    Components --> API: Restart complete
    API --> AdminUI: Restart successful
    AdminUI -> Admin: Display success message
end

@enduml