@startuml Backend_Component_Loading
title Langflow Backend - Component Loading Sequence

participant "Application Startup" as Startup
participant "Settings Service" as SettingsService
participant "Component Scanner" as Scanner
participant "Type Extractor" as TypeExtractor
participant "Component Registry" as Registry
participant "Field Manager" as FieldManager
participant "Component Cache" as Cache

Startup -> SettingsService: get_settings()
SettingsService --> Startup: settings

Startup -> Scanner: scan_components(settings.components_path)
activate Scanner

Scanner -> Scanner: discover_component_directories()

loop For each component type directory
    Scanner -> Scanner: load_module_components()
    
    loop For each component module
        Scanner -> Scanner: import_module()
        Scanner -> Scanner: extract_component_classes()
        
        loop For each component class
            Scanner -> TypeExtractor: extract_type_info(component_class)
            TypeExtractor -> TypeExtractor: analyze_input_types()
            TypeExtractor -> TypeExtractor: analyze_output_types()
            TypeExtractor -> TypeExtractor: extract_parameters()
            TypeExtractor -> FieldManager: process_fields()
            FieldManager -> FieldManager: determine_field_types()
            FieldManager -> FieldManager: set_field_options()
            FieldManager --> TypeExtractor: field_definitions
            TypeExtractor --> Scanner: component_type_info
            
            Scanner -> Registry: register_component(component_class, type_info)
            Registry -> Registry: validate_component()
            Registry -> Registry: add_to_registry()
        end
    end
end

Scanner -> Cache: cache_components(registry)
deactivate Scanner

Scanner --> Startup: component_types
Startup -> Startup: make_components_available_to_api()

@enduml